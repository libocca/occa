name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  run:
    strategy:
      matrix:
        include:
          - name: (Ubuntu) gcc-8
            os: ubuntu-18.04
            CC: gcc-8
            CXX: g++-8
            FC: gfortran-8
            GCOV: gcov-8
            OCCA_COVERAGE: 1
            OCCA_FORTRAN_ENABLED: 1

          - name: (Ubuntu) gcc-9
            os: ubuntu-18.04
            CC: gcc-9
            CXX: g++-9
            FC: gfortran-9
            GCOV: gcov-9
            OCCA_COVERAGE: 1
            OCCA_FORTRAN_ENABLED: 1

          - name: (Ubuntu) clang-6
            os: ubuntu-18.04
            CC: clang-6.0
            CXX: clang++-6.0
            OCCA_COVERAGE: 0

          - name: (Ubuntu) clang-9
            os: ubuntu-18.04
            CC: clang-9
            CXX: clang++-9
            OCCA_COVERAGE: 0

          - name: (MacOS) gcc-9
            os: macos-10.15
            CC: gcc-9
            CXX: g++-9
            GCOV: gcov-9
            OCCA_COVERAGE: 1

          - name: (MacOS) clang
            os: macos-10.15
            CC: clang
            CXX: clang++
            OCCA_COVERAGE: 0

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}

    env:
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
      FC: ${{ matrix.FC }}
      GCOV: ${{ matrix.GCOV }}
      OCCA_COVERAGE: ${{ matrix.OCCA_COVERAGE }}
      OCCA_FORTRAN_ENABLED: ${{ matrix.OCCA_FORTRAN_ENABLED }}
      FORTRAN_EXAMPLES: ${{ matrix.OCCA_FORTRAN_ENABLED }}

    steps:
    - uses: actions/checkout@v2

    - name: Compiler info
      run: make -j 16 info

    - name: Compile library
      run: make -j 16

    - name: Compile tests
      run: make -j 16 tests

    - name: Run unit tests
      run: ./tests/run_tests

    - name: Run examples
      run: ./tests/run_examples

    - name: Upload code coverage
      run: bash <(curl --no-buffer -s https://codecov.io/bash) -x "${GCOV}"
      if: ${{ matrix.OCCA_COVERAGE }}
